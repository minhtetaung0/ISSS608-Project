{
  "hash": "f092a76aedde25519ec1572739dad648",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Project Proposal\"\nauthor: \"Group 13\"\ndate: \"June 1, 2025\"\ndate-modified: \"last-modified\"\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# Motivation\n\nThe motivation for this project arises from the remarkable rise of Sailor Shift, a global music phenomenon originating from Oceanus, and the growing cultural influence of the Oceanus Folk genre. As Oceanus transforms from a quiet fishing island into a globally recognized cultural hub, there is an urgent need to trace and understand how Sailor’s career, collaborations, and artistic evolution have contributed to the global diffusion of Oceanus Folk.\n\nLocal journalist Silas Reed has compiled an extensive musical knowledge graph to trace these influences. Our project aims to support this effort by building an interactive system that enables deep exploration of Sailor’s career trajectory and the broader spread of Oceanus Folk through collaborations, stylistic borrowings, and evolving artist networks.\n\n# Objectives\n\nThis project seeks to design and develop insightful visualizations and analytic tools that allow users (like Silas) to explore the musical influence network centered on Sailor Shift. Specifically, we aim to:\n\n-   ***Map Musical Influence:*** Visualize how Sailor Shift has been influenced by others and, in turn, how she has directly or indirectly influenced artists and genres.\n\n-   ***Analyze Collaborations:*** Identify key collaborators throughout Sailor’s career, both from her early band (Ivy Echoes) and her solo years, and analyze the genres and roles of those collaborators.\n\n-   ***Track Genre Evolution:*** Understand how Oceanus Folk evolved and interacted with genres like Indie Folk, Indie Pop, and Darkwave through stylized performances, lyrical themes, and musical structure.\n\n-   ***Visualize Career Milestones***: Highlight key turning points in Sailor’s career, including viral hits, genre shifts, and breakout collaborations using timeline and network-based views.\n\n-   ***Compare Artists’ Careers***: Contrast the musical journeys of Sailor’s former bandmates or contemporaries, and assess what defines a rising star in Oceanus Folk.\n\n-   ***Predict Emerging Stars***: Use influence and collaboration patterns to forecast the next potential breakout artists in the Oceanus Folk scene.\n\n# Data\n\nThe project uses the official dataset from VAST Challenge 2025 [Mini-Challenge 1](https://vast-challenge.github.io/2025/MC1.html). Key features of the dataset include:\n\n-   A directed multigraph with:\n\n    -   17,412 nodes\n\n    -   37,857 edges\n\n    -   18 connected components\n\n**Node Types:**\n\n-   Person: Artists, composers, producers, lyricists\n\n-   MusicalGroup: Groups/bands like Ivy Echoes\n\n-   Song: With attributes like genre, notable charting, and release dates\n\n-   Album: Includes similar metadata as songs\n\n-   RecordLabel: Institutions that record/distribute music\n\n**Edge Types:**\n\n-   Collaboration and authorship: PerformerOf, ComposerOf, LyricistOf, ProducerOf\n\n-   Influence relationships: InStyleOf, CoverOf, DirectlySamples, LyricalReferenceTo, InterpolatesFrom\n\n-   Membership and recording: MemberOf, RecordedBy, DistributedBy\n\n-   The dataset enables temporal, relational, and genre-based exploration of the interconnected music world surrounding Sailor Shift.\n\nThe dataset enables temporal, relational, and genre-based exploration of the interconnected music world surrounding Sailor Shift.\n\n# R Packages\n\n::: tabset\n\n## Utility\n\n-   **tidyverse**: A collection of R packages designed for data science, offering tools for data manipulation, visualization, and analysis using a consistent syntax.\n\n-   **jsonlite**: Provides a robust and easy-to-use framework for parsing and generating JSON data in R.\n\n-   **SmartEDA**: Automates exploratory data analysis (EDA) by generating summary statistics, visualizations, and variable profiling with minimal code.\n\n-   **ggtext**: Enhances the text rendering capabilities of ggplot2.\n\n-   **lubridate**: Easy handling and manipulation of date/time data.\n\n-   **janitor**: Cleans messy column names and tabular data efficiently.\n\n-   **factoextra**: Enhances visualization and interpretation of multivariate results (PCA, clustering).\n\n-   **FactoMineR**: Performs multivariate analysis like PCA, MCA, CA—underlying support for factoextra.\n\n-   **DT**: Creates interactive HTML data tables for viewing in RMarkdown or Shiny.\n\n## Plotting\n\n-   **tidygraph**: Brings tidyverse principles to graph data, enabling tidy manipulation of nodes and edges in network analysis.\n\n-   **ggraph**: An extension of ggplot2 for visualizing graph and network structures in a customizable and aesthetically pleasing way.\n\n-   **igraph**: Low-level graph manipulation and analysis (e.g., neighbors, components, layout).\n\n-   **plotly**: Enables interactive, web-based visualizations using ggplot2 or direct plotly syntax, enhancing data exploration.\n\n-   **treemapify**: Creates treemaps using the ggplot2 framework, allowing hierarchical data to be visualized with area-proportional rectangles.\n\n-   **visNetwork**: Facilitates interactive network visualization using the vis.js JavaScript library, enabling dynamic manipulation and exploration of network graphs.\n\n-   **RColorBrewer**: An R package that provides a selection of color palettes specially designed for creating clear, visually appealing maps and graphics, particularly for categorical and sequential data.\n\n-   **ggfortify**: Helps plot PCA and clustering results directly from prcomp and kmeans.\n\n-   **fmsb**: Creates radar/spider charts—used to compare rising star profiles visually.\n\n## Shiny APP\n\n-   **shiny**: Builds interactive web applications directly from R — no JavaScript or HTML required.\n\n-   **shinywidgets**: Adds fancy and customizable UI elements to Shiny apps.\n\n-   **shinyjs**: Provides a simple way to add JavaScript-like functionality to Shiny apps — such as show/hide, enable/disable, or run JS code, without writing JavaScript.\n\n# Project Schedule\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Schedule\ndf <- tibble::tribble(\n  ~task,                    ~start,       ~end,\n  \"Exploratory data analysis\", \"2025-05-10\", \"2025-06-14\",\n  \"R Quarto/ Netlify\",      \"2025-06-01\", \"2025-07-06\",\n  \"R Shiny App\",            \"2025-06-01\", \"2025-07-06\",\n  \"Project Proposal\",       \"2025-06-01\", \"2025-06-07\",\n  \"Poster\",                 \"2025-06-08\", \"2025-06-25\",\n) %>%\n\nmutate(\n    start = as.Date(start),\n    end = as.Date(end),\n    task = factor(task, levels = rev(unique(task)))  # reverse order\n  )\n\ntoday <- Sys.Date()\n\n# Create plotly Gantt chart with before/after split\np <- plot_ly()\n\nfor (i in 1:nrow(df)) {\n  s <- df$start[i]\n  e <- df$end[i]\n  t <- df$task[i]\n  \n  # Before today (black bar)\n  if (e >= today && s < today) {\n    p <- add_segments(\n      p,\n      x = s,\n      xend = today,\n      y = t,\n      yend = t,\n      type = \"scatter\",\n      mode = \"lines\",\n      line = list(color = \"black\", width = 15),\n      hoverinfo = \"text\",\n      text = paste0(\"<b>\", t, \"</b><br>Start: \", format(s, \"%b %d\"), \"<br>End: \", format(e, \"%b %d\"))\n    )\n  }\n  \n  # After today (pink bar)\n  post_start <- max(s, today)\n  if (e > today) {\n    p <- add_segments(\n      p,\n      x = post_start,\n      xend = e,\n      y = t,\n      yend = t,\n      type = \"scatter\",\n      mode = \"lines\",\n      line = list(color = \"pink\", width = 15),\n      hoverinfo = \"text\",\n      text = paste0(\"<b>\", t, \"</b><br>Start: \", format(s, \"%b %d\"), \"<br>End: \", format(e, \"%b %d\"))\n    )\n  }\n}\n\n# Add vertical line for today\np <- layout(\n  p,\n  title = \"Project Timeline\",\n  xaxis = list(title = \"\", type = \"date\", tickformat = \"%b %d\"),\n  yaxis = list(title = \"\", categoryorder = \"array\", categoryarray = rev(df$task)),\n  showlegend = FALSE,\n  shapes = list(\n    list(\n      type = \"line\",\n      x0 = today,\n      x1 = today,\n      y0 = -0.5,\n      y1 = length(df$task) - 0.5,\n      line = list(color = \"red\", width = 2)\n    )\n  )\n)\n\np\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-ad0ad1e90c2b06555a7d\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ad0ad1e90c2b06555a7d\">{\"x\":{\"visdat\":{\"107d55ec0b19\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"107d55ec0b19\",\"attrs\":{\"107d55ec0b19\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-05-10\",\"y\":\"Exploratory data analysis\",\"xend\":\"2025-06-07\",\"yend\":\"Exploratory data analysis\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>Exploratory data analysis<\\/b><br>Start: May 10<br>End: Jun 14\",\"inherit\":true},\"107d55ec0b19.1\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-06-07\",\"y\":\"Exploratory data analysis\",\"xend\":\"2025-06-14\",\"yend\":\"Exploratory data analysis\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>Exploratory data analysis<\\/b><br>Start: May 10<br>End: Jun 14\",\"inherit\":true},\"107d55ec0b19.2\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-06-01\",\"y\":\"R Quarto/ Netlify\",\"xend\":\"2025-06-07\",\"yend\":\"R Quarto/ Netlify\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>R Quarto/ Netlify<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"inherit\":true},\"107d55ec0b19.3\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-06-07\",\"y\":\"R Quarto/ Netlify\",\"xend\":\"2025-07-06\",\"yend\":\"R Quarto/ Netlify\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>R Quarto/ Netlify<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"inherit\":true},\"107d55ec0b19.4\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-06-01\",\"y\":\"R Shiny App\",\"xend\":\"2025-06-07\",\"yend\":\"R Shiny App\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>R Shiny App<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"inherit\":true},\"107d55ec0b19.5\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-06-07\",\"y\":\"R Shiny App\",\"xend\":\"2025-07-06\",\"yend\":\"R Shiny App\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>R Shiny App<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"inherit\":true},\"107d55ec0b19.6\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-06-01\",\"y\":\"Project Proposal\",\"xend\":\"2025-06-07\",\"yend\":\"Project Proposal\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>Project Proposal<\\/b><br>Start: Jun 01<br>End: Jun 07\",\"inherit\":true},\"107d55ec0b19.7\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":\"2025-06-08\",\"y\":\"Poster\",\"xend\":\"2025-06-25\",\"yend\":\"Poster\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":\"text\",\"text\":\"<b>Poster<\\/b><br>Start: Jun 08<br>End: Jun 25\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Project Timeline\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"type\":\"date\",\"tickformat\":\"%b %d\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"categoryorder\":\"array\",\"categoryarray\":[\"Poster\",\"Project Proposal\",\"R Shiny App\",\"R Quarto/ Netlify\",\"Exploratory data analysis\"],\"type\":\"category\"},\"showlegend\":false,\"shapes\":[{\"type\":\"line\",\"x0\":\"2025-06-07\",\"x1\":\"2025-06-07\",\"y0\":-0.5,\"y1\":4.5,\"line\":{\"color\":\"red\",\"width\":2}}],\"hovermode\":\"closest\"},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[\"2025-05-10\",\"2025-06-07\"],\"y\":[\"Exploratory data analysis\",\"Exploratory data analysis\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>Exploratory data analysis<\\/b><br>Start: May 10<br>End: Jun 14\",\"<b>Exploratory data analysis<\\/b><br>Start: May 10<br>End: Jun 14\"],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2025-06-07\",\"2025-06-14\"],\"y\":[\"Exploratory data analysis\",\"Exploratory data analysis\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>Exploratory data analysis<\\/b><br>Start: May 10<br>End: Jun 14\",\"<b>Exploratory data analysis<\\/b><br>Start: May 10<br>End: Jun 14\"],\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2025-06-01\",\"2025-06-07\"],\"y\":[\"R Quarto/ Netlify\",\"R Quarto/ Netlify\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>R Quarto/ Netlify<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"<b>R Quarto/ Netlify<\\/b><br>Start: Jun 01<br>End: Jul 06\"],\"marker\":{\"color\":\"rgba(44,160,44,1)\",\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2025-06-07\",\"2025-07-06\"],\"y\":[\"R Quarto/ Netlify\",\"R Quarto/ Netlify\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>R Quarto/ Netlify<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"<b>R Quarto/ Netlify<\\/b><br>Start: Jun 01<br>End: Jul 06\"],\"marker\":{\"color\":\"rgba(214,39,40,1)\",\"line\":{\"color\":\"rgba(214,39,40,1)\"}},\"error_y\":{\"color\":\"rgba(214,39,40,1)\"},\"error_x\":{\"color\":\"rgba(214,39,40,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2025-06-01\",\"2025-06-07\"],\"y\":[\"R Shiny App\",\"R Shiny App\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>R Shiny App<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"<b>R Shiny App<\\/b><br>Start: Jun 01<br>End: Jul 06\"],\"marker\":{\"color\":\"rgba(148,103,189,1)\",\"line\":{\"color\":\"rgba(148,103,189,1)\"}},\"error_y\":{\"color\":\"rgba(148,103,189,1)\"},\"error_x\":{\"color\":\"rgba(148,103,189,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2025-06-07\",\"2025-07-06\"],\"y\":[\"R Shiny App\",\"R Shiny App\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>R Shiny App<\\/b><br>Start: Jun 01<br>End: Jul 06\",\"<b>R Shiny App<\\/b><br>Start: Jun 01<br>End: Jul 06\"],\"marker\":{\"color\":\"rgba(140,86,75,1)\",\"line\":{\"color\":\"rgba(140,86,75,1)\"}},\"error_y\":{\"color\":\"rgba(140,86,75,1)\"},\"error_x\":{\"color\":\"rgba(140,86,75,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2025-06-01\",\"2025-06-07\"],\"y\":[\"Project Proposal\",\"Project Proposal\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"black\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>Project Proposal<\\/b><br>Start: Jun 01<br>End: Jun 07\",\"<b>Project Proposal<\\/b><br>Start: Jun 01<br>End: Jun 07\"],\"marker\":{\"color\":\"rgba(227,119,194,1)\",\"line\":{\"color\":\"rgba(227,119,194,1)\"}},\"error_y\":{\"color\":\"rgba(227,119,194,1)\"},\"error_x\":{\"color\":\"rgba(227,119,194,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2025-06-08\",\"2025-06-25\"],\"y\":[\"Poster\",\"Poster\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"color\":\"pink\",\"width\":15},\"hoverinfo\":[\"text\",\"text\"],\"text\":[\"<b>Poster<\\/b><br>Start: Jun 08<br>End: Jun 25\",\"<b>Poster<\\/b><br>Start: Jun 08<br>End: Jun 25\"],\"marker\":{\"color\":\"rgba(127,127,127,1)\",\"line\":{\"color\":\"rgba(127,127,127,1)\"}},\"error_y\":{\"color\":\"rgba(127,127,127,1)\"},\"error_x\":{\"color\":\"rgba(127,127,127,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}