[
  {
    "objectID": "Introduction.html",
    "href": "Introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "üé∂ Folk Flow\nExploring Evolution, Influence, and Emerging Stars in Oceanus Folk Music\nFolk Flow is a data-driven musical research project analyzing how artists and genres interact, transform, and thrive within the Oceanus Folk ecosystem. By using influence graphs, machine learning, and prediction techniques, we dive deep into the genre‚Äôs development and the role Sailor Shift played in its transformation.\n\n\nMain Analyses\n\n\nWe developed the Oceanus Folk Influence Explorer, a Shiny dashboard that performs three key types of analysis:\n\n\n\n\n\n\nNetwork Analysis\nMapping direct and indirect influence relationships using graph theory and centrality metrics.\n\n\n\n\n\nCluster Analysis\nGrouping artists by productivity, genre diversity, and collaboration using K-Means, PAM, and DBSCAN.\n\n\n\n\n\nFuture Analysis\nForecasting rising stars using rule-based scores, growth models, and network centrality.\n\n\n\n\nKey Findings\n\n\n\n\n\n\n\n11,358Total Artists\n\n\n\n\n\n\n\n20,976Total Notable Works\n\n\n\n\n\n\n\n0.8 YearsAvg. Time to Notability\n\n\n\n\n\n\n\n223Musical Groups Identified\n\n\n\n\n\n\n\nDream Popis the Most Frequent Genre\n\n\n\n\n\nüé∂ Folk Flow Explorer\n\n\nThe Shiny dashboard includes 7 interactive modules with unique visual and analytical capabilities. Below are snapshots of key pages ‚Äî hover for more details.\n\n\n\n\n\nüìä Overview: Summary KPIs, genre timelines, artist profile table, donut plots, and filters.\n\n\n\n\n\nüìà EDA: Explore node and edge types, genre heatmaps, and song distributions.\n\n\n\n\n\nüë©‚Äçüé§ Artist Profiles: Career timelines, ego networks, radar comparisons, and tables.\n\n\n\n\n\nüåê Influence Network: Explore who Sailor Shift influenced and who influenced Sailor.\n\n\n\n\n\nüé∂ Oceanus Folk Influence: Timeline, treemaps, lollipop charts, and genre flow networks.\n\n\n\n\n\nüîÄ Cluster Analysis: Cluster proportions, PCA plots, boxplots, and model evaluation.\n\n\n\n\n\nüîÆ Prediction Table: Composite Score, Growth Trajectory, and Network Centrality outputs.\n\n\n\n\n\nüìè Metrics: Tiers, scores, radar plots, and metric breakdowns by method.\n\n\n\n\nüöÄ Launch the App ‚Üí\n\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html",
    "href": "Prototype/Sailor-Oceanus_influence.html",
    "title": "Sailor and Oceanus Influence",
    "section": "",
    "text": "In this take-home exercise, we are required to select one of the module of our proposed Shiny application and complete the following tasks:\n\nTo evaluate and determine the necessary R packages needed for your Shiny application are supported in R CRAN,\nTo prepare and test the specific R codes can be run and returned the correct output as expected,\nTo determine the parameters and outputs that will be exposed on the Shiny applications, and\nTo select the appropriate Shiny UI components for exposing the parameters determine above."
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#loading-r-packages",
    "href": "Prototype/Sailor-Oceanus_influence.html#loading-r-packages",
    "title": "Sailor and Oceanus Influence",
    "section": "3.1 Loading R Packages",
    "text": "3.1 Loading R Packages\n\n\nShow the code\npacman::p_load(\n  # Core packages\n  tidyverse,    # dplyr, ggplot2, tidyr, etc.\n  jsonlite,     # JSON file reading\n  SmartEDA,     # Automated EDA\n  tidygraph,    # Graph manipulation\n  ggraph,       # Network visualization\n  plotly,       # Interactive visualizations\n  treemapify,   # Treemap visualizations\n  visNetwork,   # Interactive network visualization\n  RColorBrewer, # Color palettes\n  DT,           # Interactive tables\n  ggthemes      # Additional ggplot themes\n)"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#loading-preprocessed-data-from-rds-files",
    "href": "Prototype/Sailor-Oceanus_influence.html#loading-preprocessed-data-from-rds-files",
    "title": "Sailor and Oceanus Influence",
    "section": "3.2 Loading Preprocessed Data from RDS Files",
    "text": "3.2 Loading Preprocessed Data from RDS Files\n\n\nShow the code\n# Load all preprocessed data\nfull_graph &lt;- readRDS(\"data/processed/full_graph.rds\")\nnodes_categorized &lt;- readRDS(\"data/processed/nodes_categorized.rds\") \nedges_categorized &lt;- readRDS(\"data/processed/edges_categorized.rds\")\nartists_profile &lt;- readRDS(\"data/processed/artists_profile_complete.rds\")\n\n# Load special processing components individually\nsailor_id &lt;- readRDS(\"data/processed/sailor_shift_id.rds\")\ninfluence_types &lt;- readRDS(\"data/processed/influence_types.rds\")\nof_songs &lt;- readRDS(\"data/processed/oceanus_folk_songs.rds\")\ninfluence_edges &lt;- readRDS(\"data/processed/influence_edges.rds\")\nsailor_edges &lt;- readRDS(\"data/processed/sailor_influence_edges.rds\")\nvis_nodes &lt;- readRDS(\"data/processed/network_vis_nodes.rds\") \nvis_edges &lt;- readRDS(\"data/processed/network_vis_edges.rds\")\n\n# Load additional supporting data if needed\npeople_tbl &lt;- readRDS(\"data/processed/people_table.rds\")\nworks_tbl &lt;- readRDS(\"data/processed/works_table.rds\")\nartist_works &lt;- readRDS(\"data/processed/artist_works.rds\")\ncluster_data &lt;- readRDS(\"data/processed/cluster_analysis_data.rds\")\n\n# Verify all loaded successfully\nloaded_objects &lt;- ls()\ncat(\"Successfully loaded:\\n\", paste(loaded_objects, collapse=\"\\n \"))\n\n\nSuccessfully loaded:\n artist_works\n artists_profile\n cluster_data\n edges_categorized\n full_graph\n influence_edges\n influence_types\n nodes_categorized\n of_songs\n people_tbl\n sailor_edges\n sailor_id\n vis_edges\n vis_nodes\n works_tbl"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#count-of-edge-types",
    "href": "Prototype/Sailor-Oceanus_influence.html#count-of-edge-types",
    "title": "Sailor and Oceanus Influence",
    "section": "4.1 Count of Edge Types",
    "text": "4.1 Count of Edge Types\n\n\nShow the code\nedges_categorized %&gt;%\n  count(edge_type) %&gt;%\n  ggplot(aes(y = reorder(edge_type, n), x = n)) +\n  geom_col(fill = \"steelblue\") +\n  labs(title = \"Distribution of Edge Types\", \n       x = \"Count\", \n       y = \"Edge Type\") +\n  theme_minimal()"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#count-of-node-types",
    "href": "Prototype/Sailor-Oceanus_influence.html#count-of-node-types",
    "title": "Sailor and Oceanus Influence",
    "section": "4.2 Count of Node Types",
    "text": "4.2 Count of Node Types\n\n\nShow the code\nnodes_categorized %&gt;%\n  count(node_type) %&gt;%\n  ggplot(aes(y = reorder(node_type, n), x = n)) +\n  geom_col(fill = \"tomato\") +\n  labs(title = \"Distribution of Node Types\", \n       x = \"Count\", \n       y = \"Node Type\") +\n  theme_minimal()"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#genre-distribution-of-songs",
    "href": "Prototype/Sailor-Oceanus_influence.html#genre-distribution-of-songs",
    "title": "Sailor and Oceanus Influence",
    "section": "4.3 Genre Distribution of Songs",
    "text": "4.3 Genre Distribution of Songs\n\n\nShow the code\nnodes_categorized %&gt;%\n  filter(node_type == \"Song\") %&gt;%\n  count(genre, sort = TRUE) %&gt;%\n  ggplot(aes(x = reorder(genre, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"tomato\") +\n  coord_flip() +\n  labs(title = \"Count of Songs in each Genre\", \n       x = \"Genre\", \n       y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#temporal-distribution-of-oceanus-folk-songs",
    "href": "Prototype/Sailor-Oceanus_influence.html#temporal-distribution-of-oceanus-folk-songs",
    "title": "Sailor and Oceanus Influence",
    "section": "4.4 Temporal Distribution of Oceanus Folk Songs",
    "text": "4.4 Temporal Distribution of Oceanus Folk Songs\n\n\nShow the code\nof_songs %&gt;%\n  filter(!is.na(release_date)) %&gt;%\n  count(release_date) %&gt;%\n  ggplot(aes(x = as.integer(release_date), y = n)) +\n  geom_line(color = \"purple\") +\n  labs(title = \"Release Trend of Oceanus Folk Songs\", \n       x = \"Year\", \n       y = \"Number of Songs\") +\n  theme_minimal()"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#temporal-spread-of-influence-from-oceanus-folk",
    "href": "Prototype/Sailor-Oceanus_influence.html#temporal-spread-of-influence-from-oceanus-folk",
    "title": "Sailor and Oceanus Influence",
    "section": "5.1 Temporal Spread of Influence from Oceanus Folk",
    "text": "5.1 Temporal Spread of Influence from Oceanus Folk\n\n\nShow the code\n# Get influenced songs from Oceanus Folk\ninfluence_over_time &lt;- influence_edges %&gt;%\n  filter(source %in% of_songs$id) %&gt;%\n  left_join(nodes_categorized, by = c(\"target\" = \"id\")) %&gt;%\n  filter(node_type == \"Song\", !is.na(release_date)) %&gt;%\n  mutate(release_year = as.integer(release_date)) %&gt;%\n  count(release_year, name = \"influenced_count\")\n\n# Create interactive time series plot\nplot_ly(influence_over_time,\n        x = ~release_year,\n        y = ~influenced_count,\n        type = 'scatter',\n        mode = 'lines+markers',\n        line = list(color = 'steelblue'),\n        marker = list(size = 6, color = 'black'),\n        text = ~paste(\"Year:\", release_year, \"&lt;br&gt;Influenced Songs:\", influenced_count),\n        hoverinfo = 'text') %&gt;%\n  layout(title = \"Spread of Oceanus Folk Influence Over Time\",\n         xaxis = list(title = \"Release Year of Influenced Songs\"),\n         yaxis = list(title = \"Number of Influenced Songs\"),\n         hoverlabel = list(bgcolor = \"white\"))"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#heatmap-of-oceanus-folk-influence-by-genre-and-year",
    "href": "Prototype/Sailor-Oceanus_influence.html#heatmap-of-oceanus-folk-influence-by-genre-and-year",
    "title": "Sailor and Oceanus Influence",
    "section": "5.2 Heatmap of Oceanus Folk Influence by Genre and Year",
    "text": "5.2 Heatmap of Oceanus Folk Influence by Genre and Year\n\n\nShow the code\n# Prepare heatmap data\ninfluence_heatmap &lt;- influence_edges %&gt;%\n  filter(source %in% of_songs$id) %&gt;%\n  left_join(nodes_categorized, by = c(\"target\" = \"id\")) %&gt;%\n  filter(!is.na(release_date), !is.na(genre)) %&gt;%\n  count(release_date, genre) %&gt;%\n  mutate(release_year = as.character(release_date),\n         tooltip = paste(\"&lt;b&gt;\", release_year, \"&lt;/b&gt;\", \n                         \"\\nGenre : \", genre,\n                         \"\\nInfluenced Songs : \", n))\n\n# Create heatmap\nheat &lt;- ggplot(influence_heatmap, aes(x = release_year, y = genre, fill = n)) + \n  geom_tile(color = \"white\", size = 1, aes(text = tooltip)) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"Influenced Songs\", low = \"#fff2f4\", high = \"coral\") +\n  labs(x = \"Release Year\", \n       y = \"Genre\", \n       title = \"Oceanus Folk Influence by Genre and Year\",\n       caption = \"Data Source: VAST Challenge 2025 MC1\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 8, angle = 90, hjust = 1),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(hjust = 0.5, face = \"bold\"),\n        legend.title = element_text(size = 9),\n        legend.text = element_text(size = 7),\n        legend.position = \"top\")\n\n# Convert to interactive plot\nggplotly(heat, tooltip = \"text\")"
  },
  {
    "objectID": "Prototype/Sailor-Oceanus_influence.html#network-analysis-for-genres-influenced-by-oceanus-folk",
    "href": "Prototype/Sailor-Oceanus_influence.html#network-analysis-for-genres-influenced-by-oceanus-folk",
    "title": "Sailor and Oceanus Influence",
    "section": "6.1 Network Analysis for Genres Influenced by Oceanus Folk",
    "text": "6.1 Network Analysis for Genres Influenced by Oceanus Folk\n\n\nShow the code\n## 6.1 Network Analysis for Genres Influenced by Oceanus Folk\n# Step 1: Filter outward-influenced nodes to songs with known genre\noutward_genre_edges &lt;- influence_edges %&gt;%\n  filter(source %in% of_songs$id) %&gt;%\n  left_join(nodes_categorized, by = c(\"target\" = \"id\")) %&gt;%\n  filter(node_type == \"Song\", !is.na(genre)) %&gt;%\n  transmute(from = \"Oceanus Folk\", to = genre)  # Oceanus Folk ‚Üí genre\n\n# Step 2: Count influence strength by genre\noutward_genre_strength &lt;- outward_genre_edges %&gt;%\n  count(to, name = \"influence_count\")\n\n# Step 3: Identify top 5 influenced genres and assign colors\ntop5_out_genres &lt;- outward_genre_strength %&gt;%\n  arrange(desc(influence_count)) %&gt;%\n  slice(1:5) %&gt;%\n  mutate(color = rev(RColorBrewer::brewer.pal(5, \"Oranges\")))\n\n# Step 4: Build nodes for visNetwork\noutward_genre_nodes &lt;- unique(c(outward_genre_edges$from, outward_genre_edges$to)) %&gt;%\n  tibble(id = .) %&gt;%\n  left_join(outward_genre_strength, by = c(\"id\" = \"to\")) %&gt;%\n  left_join(top5_out_genres %&gt;% select(id = to, top5_color = color), by = \"id\") %&gt;%\n  mutate(\n    influence_count = replace_na(influence_count, 1),\n    label = id,\n    value = influence_count * 2,\n    color = case_when(\n      id == \"Oceanus Folk\" ~ \"#4682B4\",            # Blue for Oceanus Folk\n      !is.na(top5_color) ~ top5_color,             # Top 5 in Oranges palette\n      TRUE ~ \"#FDD0A2\"                              # Others in light orange\n    ),\n    title = paste0(\"Genre: \", id, \"&lt;br&gt;Influence Count: \", influence_count)\n  )\n\n# Save these for future use\nsaveRDS(outward_genre_nodes, \"data/processed/outward_genre_nodes.rds\")\nsaveRDS(outward_genre_edges, \"data/processed/outward_genre_edges.rds\")\n\n# Render network\nvisNetwork(outward_genre_nodes, outward_genre_edges, height = \"600px\", width = \"100%\") %&gt;%\n  visEdges(arrows = \"to\") %&gt;%\n  visOptions(highlightNearest = TRUE) %&gt;%\n  visLayout(randomSeed = 456) %&gt;%\n  visPhysics(enabled = FALSE)"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html",
    "href": "Prototype/Data Preprocessing.html",
    "title": "Data Preprocessing",
    "section": "",
    "text": "Below is the comprehensive data processing pipeline with detailed explanations for each step and code to save intermediate datasets as RDS files for future use.\n\n\n\npacman::p_load(\n  # Core packages\n  tidyverse,    # dplyr, ggplot2, tidyr, etc.\n  jsonlite,     # JSON file reading\n  janitor,      # Data cleaning\n  lubridate,    # Date handling\n  \n  # Network/graph packages\n  tidygraph,    # Graph manipulation\n  igraph,       # Network analysis\n  ggraph,       # Network visualization\n  \n  # Additional utilities\n  here,         # File path management\n  glue,         # String interpolation\n  fs            # File system operations\n)\n# Load JSON data\ndata_path &lt;- \"data/MC1_graph.json\"\nkg &lt;- fromJSON(data_path)\n\n# Convert to tibbles and clean names\nnodes_tbl &lt;- as_tibble(kg$nodes) %&gt;% \n  clean_names() %&gt;%\n  mutate(\n    release_date = as.integer(release_date),\n    id = as.integer(id)\n  ) %&gt;%\n  distinct()\n\nedges_tbl &lt;- as_tibble(kg$links) %&gt;% \n  clean_names()\n\n# Save raw data\nsaveRDS(nodes_tbl, \"data/processed/nodes_raw.rds\")\nsaveRDS(edges_tbl, \"data/processed/edges_raw.rds\")\n\nExplanation:\n\nLoads the graph data from JSON format\nConverts to tidyverse tibbles and cleans column names\nEnsures proper data types for critical columns\nRemoves duplicate nodes\nSaves raw data for archival purposes\n\n\n\n\n\n# Create mapping between original IDs and sequential indices\nid_map &lt;- tibble(\n  id = nodes_tbl$id, \n  index = seq_len(nrow(nodes_tbl)))\nsaveRDS(id_map, \"data/processed/id_mapping.rds\")\n\n# Map edge sources and targets to sequential indices\nedges_tbl_mapped &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;% \n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;% \n  rename(to = index) %&gt;%\n  filter(!is.na(from), !is.na(to)) %&gt;%\n  mutate(\n    from = as.integer(from),\n    to = as.integer(to)\n  )\nsaveRDS(edges_tbl_mapped, \"data/processed/edges_mapped.rds\")\n\n# Build graph object\ngraph &lt;- tbl_graph(\n  nodes = nodes_tbl, \n  edges = edges_tbl_mapped, \n  directed = TRUE\n)\nsaveRDS(graph, \"data/processed/full_graph.rds\")\n\nExplanation:\n\nCreates a mapping between original node IDs and sequential indices\nMaps edge endpoints to these new indices for efficient graph processing\nFilters out edges with missing endpoints\nConstructs a tidygraph object for network analysis\nSaves all intermediate steps for graph reconstruction\n\n\n\n\n\n# Categorize nodes into supertypes\nnodes_tbl &lt;- nodes_tbl %&gt;%\n  mutate(\n    supertype = case_when(\n      node_type %in% c(\"Song\", \"Album\") ~ \"Work\",\n      node_type %in% c(\"Person\") ~ \"Individual\",\n      node_type %in% c(\"MusicalGroup\") ~ \"Group\",\n      node_type %in% c(\"RecordLabel\") ~ \"Organization\",\n      TRUE ~ \"Other\"\n    )\n  )\nsaveRDS(nodes_tbl, \"data/processed/nodes_categorized.rds\")\n\n# Categorize edges into superedges\nedges_tbl_mapped &lt;- edges_tbl_mapped %&gt;%\n  mutate(\n    superedge = case_when(\n      edge_type %in% c(\"ComposerOf\", \"LyricistOf\", \"ProducerOf\", \"RecordedBy\", \"PerformerOf\") ~ \"Contributes\",\n      edge_type %in% c(\"CoverOf\", \"DirectlySamples\", \"InterpolatesFrom\", \"LyricalReferenceTo\") ~ \"Collaborations\",\n      edge_type %in% c(\"DistributedBy\") ~ \"Business\",\n      edge_type %in% c(\"MemberOf\") ~ \"Membership\",\n      edge_type %in% c(\"InStyleOf\") ~ \"StyleInfluence\",\n      TRUE ~ \"Other\"\n    )\n  )\nsaveRDS(edges_tbl_mapped, \"data/processed/edges_categorized.rds\")\n\nExplanation:\n\nCreates higher-level categories for nodes to simplify analysis\nGroups similar edge types into meaningful supercategories\nPreserves original types while adding these analytical groupings\nSaves the enriched node and edge data\n\n\n\n\n\n# Extract people and works\npeople_tbl &lt;- nodes_tbl %&gt;% \n  filter(supertype == \"Individual\") %&gt;%\n  select(person_id = id, name)\nsaveRDS(people_tbl, \"data/processed/people_table.rds\")\n\nworks_tbl &lt;- nodes_tbl %&gt;% \n  filter(supertype == \"Work\") %&gt;%\n  select(work_id = id, release_date, genre, notable)\nsaveRDS(works_tbl, \"data/processed/works_table.rds\")\n\n# Map contributions (artists to works)\ncreated_links &lt;- edges_tbl_mapped %&gt;%\n  filter(superedge == \"Contributes\") %&gt;%\n  left_join(id_map, by = c(\"from\" = \"index\")) %&gt;% \n  rename(person_id = id) %&gt;%\n  left_join(id_map, by = c(\"to\" = \"index\")) %&gt;% \n  rename(work_id = id)\nsaveRDS(created_links, \"data/processed/contribution_links.rds\")\n\n# Create artist-work mapping with metadata\nartist_works &lt;- created_links %&gt;%\n  left_join(works_tbl, by = \"work_id\") %&gt;%\n  filter(!is.na(release_date))\nsaveRDS(artist_works, \"data/processed/artist_works.rds\")\n\nExplanation:\n\nSeparates people and works into dedicated tables\nMaps contribution relationships between artists and works\nJoins with work metadata to create comprehensive artist-work relationships\nSaves each component for flexible analysis\n\n\n\n\n\n# Calculate key metrics for each artist\nmax_release &lt;- max(artist_works$release_date, na.rm = TRUE)\n\nartists_profile &lt;- artist_works %&gt;%\n  group_by(person_id) %&gt;%\n  summarise(\n    total_works = n(),\n    notable_works = sum(notable, na.rm = TRUE),\n    oceanus_folk_works = sum(genre == \"Oceanus Folk\", na.rm = TRUE),\n    first_release = min(release_date, na.rm = TRUE),\n    first_notable = suppressWarnings(min(release_date[notable == TRUE], na.rm = TRUE)),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    first_notable = ifelse(is.infinite(first_notable), NA_integer_, first_notable),\n    time_to_notability = ifelse(!is.na(first_notable), \n                               first_notable - first_release, \n                               max_release + 5 - first_release)\n  )\n\n# Add collaboration counts\ncollaborations &lt;- edges_tbl_mapped %&gt;%\n  filter(superedge == \"Collaborations\") %&gt;%\n  left_join(id_map, by = c(\"from\" = \"index\")) %&gt;%\n  count(id, name = \"collaborations\") %&gt;%\n  rename(person_id = id)\nsaveRDS(collaborations, \"data/processed/collaboration_counts.rds\")\n\n# Calculate genre diversity\ngenre_diversity_tbl &lt;- artist_works %&gt;%\n  filter(!is.na(genre)) %&gt;%\n  group_by(person_id) %&gt;%\n  summarise(genre_diversity = n_distinct(genre), .groups = \"drop\")\nsaveRDS(genre_diversity_tbl, \"data/processed/genre_diversity.rds\")\n\n# Final profile merge\nartists_profile &lt;- artists_profile %&gt;%\n  left_join(collaborations, by = \"person_id\") %&gt;%\n  left_join(genre_diversity_tbl, by = \"person_id\") %&gt;%\n  mutate(\n    collaborations = replace_na(collaborations, 0),\n    genre_diversity = replace_na(genre_diversity, 0)\n  ) %&gt;%\n  inner_join(people_tbl, by = \"person_id\") %&gt;%\n  relocate(person_id, name)\nsaveRDS(artists_profile, \"data/processed/artists_profile_complete.rds\")\n\nExplanation:\n\nComputes comprehensive metrics for artist analysis:\n\nProductivity (total works)\nNotability (notable works)\nGenre specialization (Oceanus Folk works)\nCareer trajectory (time to first notable work)\nCollaboration patterns\nGenre diversity\n\nHandles edge cases (missing values, infinite values)\nJoins all metrics with artist names\nSaves both intermediate and final datasets\n\n\n\n\n\n# Identify Sailor Shift node\nsailor_id &lt;- nodes_tbl %&gt;% \n  filter(str_detect(name, fixed(\"Sailor Shift\", ignore_case = TRUE))) %&gt;%\n  pull(id)\nsaveRDS(sailor_id, \"data/processed/sailor_shift_id.rds\")\n\n# Define influence edge types\ninfluence_types &lt;- c(\"LyricalReferenceTo\", \"CoverOf\", \"InterpolatesFrom\", \n                    \"DirectlySamples\", \"InStyleOf\", \"PerformerOf\", \n                    \"ComposerOf\", \"LyricistOf\", \"ProducerOf\", \"RecordedBy\")\nsaveRDS(influence_types, \"data/processed/influence_types.rds\")\n\n# Precompute Oceanus Folk songs and influence edges\nof_songs &lt;- nodes_tbl %&gt;% \n  filter(node_type == \"Song\", genre == \"Oceanus Folk\")\nsaveRDS(of_songs, \"data/processed/oceanus_folk_songs.rds\")\n\ninfluence_edges &lt;- edges_tbl %&gt;% \n  filter(edge_type %in% influence_types)\nsaveRDS(influence_edges, \"data/processed/influence_edges.rds\")\n\n# Extract 1-hop influence edges for Sailor Shift\nsailor_edges &lt;- edges_tbl %&gt;%\n  filter(edge_type %in% influence_types, \n         source == sailor_id | target == sailor_id)\nsaveRDS(sailor_edges, \"data/processed/sailor_influence_edges.rds\")\n\n# Prepare network visualization data\ninfluence_ids &lt;- unique(c(sailor_edges$source, sailor_edges$target))\n\nvis_nodes &lt;- nodes_tbl %&gt;%\n  filter(id %in% influence_ids) %&gt;%\n  mutate(\n    label = name,\n    group = ifelse(id == sailor_id, \"Sailor Shift\", node_type),\n    color = ifelse(id == sailor_id, \"darkblue\", \"skyblue\")\n  ) %&gt;%\n  select(id, label, group, color)\nsaveRDS(vis_nodes, \"data/processed/network_vis_nodes.rds\")\n\nvis_edges &lt;- sailor_edges %&gt;%\n  select(from = source, to = target, label = edge_type)\nsaveRDS(vis_edges, \"data/processed/network_vis_edges.rds\")\n\nExplanation:\n\nIdentifies the key artist node (Sailor Shift)\nDefines relationship types considered as ‚Äúinfluence‚Äù\nExtracts Oceanus Folk songs as a special subset\nPrepares network data specifically for visualization\nSaves all components needed for network analysis\n\n\n\n\n\n# Prepare scaled data for clustering\ncluster_data &lt;- artists_profile %&gt;%\n  select(total_works, notable_works, oceanus_folk_works, \n         collaborations, time_to_notability, genre_diversity) %&gt;%\n  na.omit() %&gt;%\n  scale()  \nsaveRDS(cluster_data, \"data/processed/cluster_analysis_data.rds\")\n\n# Create directory if it doesn't exist\nif(!dir.exists(\"data/processed\")) {\n  dir.create(\"data/processed\", recursive = TRUE)\n}\n\nExplanation:\n\nSelects key numerical features for clustering\nHandles missing values\nStandardizes features to comparable scales\nEnsures output directory exists\nSaves the preprocessed clustering dataset"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html#initial-data-loading-and-cleaning",
    "href": "Prototype/Data Preprocessing.html#initial-data-loading-and-cleaning",
    "title": "Data Preprocessing",
    "section": "",
    "text": "pacman::p_load(\n  # Core packages\n  tidyverse,    # dplyr, ggplot2, tidyr, etc.\n  jsonlite,     # JSON file reading\n  janitor,      # Data cleaning\n  lubridate,    # Date handling\n  \n  # Network/graph packages\n  tidygraph,    # Graph manipulation\n  igraph,       # Network analysis\n  ggraph,       # Network visualization\n  \n  # Additional utilities\n  here,         # File path management\n  glue,         # String interpolation\n  fs            # File system operations\n)\n# Load JSON data\ndata_path &lt;- \"data/MC1_graph.json\"\nkg &lt;- fromJSON(data_path)\n\n# Convert to tibbles and clean names\nnodes_tbl &lt;- as_tibble(kg$nodes) %&gt;% \n  clean_names() %&gt;%\n  mutate(\n    release_date = as.integer(release_date),\n    id = as.integer(id)\n  ) %&gt;%\n  distinct()\n\nedges_tbl &lt;- as_tibble(kg$links) %&gt;% \n  clean_names()\n\n# Save raw data\nsaveRDS(nodes_tbl, \"data/processed/nodes_raw.rds\")\nsaveRDS(edges_tbl, \"data/processed/edges_raw.rds\")\n\nExplanation:\n\nLoads the graph data from JSON format\nConverts to tidyverse tibbles and cleans column names\nEnsures proper data types for critical columns\nRemoves duplicate nodes\nSaves raw data for archival purposes"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html#id-mapping-and-graph-construction",
    "href": "Prototype/Data Preprocessing.html#id-mapping-and-graph-construction",
    "title": "Data Preprocessing",
    "section": "",
    "text": "# Create mapping between original IDs and sequential indices\nid_map &lt;- tibble(\n  id = nodes_tbl$id, \n  index = seq_len(nrow(nodes_tbl)))\nsaveRDS(id_map, \"data/processed/id_mapping.rds\")\n\n# Map edge sources and targets to sequential indices\nedges_tbl_mapped &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;% \n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;% \n  rename(to = index) %&gt;%\n  filter(!is.na(from), !is.na(to)) %&gt;%\n  mutate(\n    from = as.integer(from),\n    to = as.integer(to)\n  )\nsaveRDS(edges_tbl_mapped, \"data/processed/edges_mapped.rds\")\n\n# Build graph object\ngraph &lt;- tbl_graph(\n  nodes = nodes_tbl, \n  edges = edges_tbl_mapped, \n  directed = TRUE\n)\nsaveRDS(graph, \"data/processed/full_graph.rds\")\n\nExplanation:\n\nCreates a mapping between original node IDs and sequential indices\nMaps edge endpoints to these new indices for efficient graph processing\nFilters out edges with missing endpoints\nConstructs a tidygraph object for network analysis\nSaves all intermediate steps for graph reconstruction"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html#node-and-edge-categorization",
    "href": "Prototype/Data Preprocessing.html#node-and-edge-categorization",
    "title": "Data Preprocessing",
    "section": "",
    "text": "# Categorize nodes into supertypes\nnodes_tbl &lt;- nodes_tbl %&gt;%\n  mutate(\n    supertype = case_when(\n      node_type %in% c(\"Song\", \"Album\") ~ \"Work\",\n      node_type %in% c(\"Person\") ~ \"Individual\",\n      node_type %in% c(\"MusicalGroup\") ~ \"Group\",\n      node_type %in% c(\"RecordLabel\") ~ \"Organization\",\n      TRUE ~ \"Other\"\n    )\n  )\nsaveRDS(nodes_tbl, \"data/processed/nodes_categorized.rds\")\n\n# Categorize edges into superedges\nedges_tbl_mapped &lt;- edges_tbl_mapped %&gt;%\n  mutate(\n    superedge = case_when(\n      edge_type %in% c(\"ComposerOf\", \"LyricistOf\", \"ProducerOf\", \"RecordedBy\", \"PerformerOf\") ~ \"Contributes\",\n      edge_type %in% c(\"CoverOf\", \"DirectlySamples\", \"InterpolatesFrom\", \"LyricalReferenceTo\") ~ \"Collaborations\",\n      edge_type %in% c(\"DistributedBy\") ~ \"Business\",\n      edge_type %in% c(\"MemberOf\") ~ \"Membership\",\n      edge_type %in% c(\"InStyleOf\") ~ \"StyleInfluence\",\n      TRUE ~ \"Other\"\n    )\n  )\nsaveRDS(edges_tbl_mapped, \"data/processed/edges_categorized.rds\")\n\nExplanation:\n\nCreates higher-level categories for nodes to simplify analysis\nGroups similar edge types into meaningful supercategories\nPreserves original types while adding these analytical groupings\nSaves the enriched node and edge data"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html#artist-profile-creation",
    "href": "Prototype/Data Preprocessing.html#artist-profile-creation",
    "title": "Data Preprocessing",
    "section": "",
    "text": "# Extract people and works\npeople_tbl &lt;- nodes_tbl %&gt;% \n  filter(supertype == \"Individual\") %&gt;%\n  select(person_id = id, name)\nsaveRDS(people_tbl, \"data/processed/people_table.rds\")\n\nworks_tbl &lt;- nodes_tbl %&gt;% \n  filter(supertype == \"Work\") %&gt;%\n  select(work_id = id, release_date, genre, notable)\nsaveRDS(works_tbl, \"data/processed/works_table.rds\")\n\n# Map contributions (artists to works)\ncreated_links &lt;- edges_tbl_mapped %&gt;%\n  filter(superedge == \"Contributes\") %&gt;%\n  left_join(id_map, by = c(\"from\" = \"index\")) %&gt;% \n  rename(person_id = id) %&gt;%\n  left_join(id_map, by = c(\"to\" = \"index\")) %&gt;% \n  rename(work_id = id)\nsaveRDS(created_links, \"data/processed/contribution_links.rds\")\n\n# Create artist-work mapping with metadata\nartist_works &lt;- created_links %&gt;%\n  left_join(works_tbl, by = \"work_id\") %&gt;%\n  filter(!is.na(release_date))\nsaveRDS(artist_works, \"data/processed/artist_works.rds\")\n\nExplanation:\n\nSeparates people and works into dedicated tables\nMaps contribution relationships between artists and works\nJoins with work metadata to create comprehensive artist-work relationships\nSaves each component for flexible analysis"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html#artist-profile-metrics-calculation",
    "href": "Prototype/Data Preprocessing.html#artist-profile-metrics-calculation",
    "title": "Data Preprocessing",
    "section": "",
    "text": "# Calculate key metrics for each artist\nmax_release &lt;- max(artist_works$release_date, na.rm = TRUE)\n\nartists_profile &lt;- artist_works %&gt;%\n  group_by(person_id) %&gt;%\n  summarise(\n    total_works = n(),\n    notable_works = sum(notable, na.rm = TRUE),\n    oceanus_folk_works = sum(genre == \"Oceanus Folk\", na.rm = TRUE),\n    first_release = min(release_date, na.rm = TRUE),\n    first_notable = suppressWarnings(min(release_date[notable == TRUE], na.rm = TRUE)),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    first_notable = ifelse(is.infinite(first_notable), NA_integer_, first_notable),\n    time_to_notability = ifelse(!is.na(first_notable), \n                               first_notable - first_release, \n                               max_release + 5 - first_release)\n  )\n\n# Add collaboration counts\ncollaborations &lt;- edges_tbl_mapped %&gt;%\n  filter(superedge == \"Collaborations\") %&gt;%\n  left_join(id_map, by = c(\"from\" = \"index\")) %&gt;%\n  count(id, name = \"collaborations\") %&gt;%\n  rename(person_id = id)\nsaveRDS(collaborations, \"data/processed/collaboration_counts.rds\")\n\n# Calculate genre diversity\ngenre_diversity_tbl &lt;- artist_works %&gt;%\n  filter(!is.na(genre)) %&gt;%\n  group_by(person_id) %&gt;%\n  summarise(genre_diversity = n_distinct(genre), .groups = \"drop\")\nsaveRDS(genre_diversity_tbl, \"data/processed/genre_diversity.rds\")\n\n# Final profile merge\nartists_profile &lt;- artists_profile %&gt;%\n  left_join(collaborations, by = \"person_id\") %&gt;%\n  left_join(genre_diversity_tbl, by = \"person_id\") %&gt;%\n  mutate(\n    collaborations = replace_na(collaborations, 0),\n    genre_diversity = replace_na(genre_diversity, 0)\n  ) %&gt;%\n  inner_join(people_tbl, by = \"person_id\") %&gt;%\n  relocate(person_id, name)\nsaveRDS(artists_profile, \"data/processed/artists_profile_complete.rds\")\n\nExplanation:\n\nComputes comprehensive metrics for artist analysis:\n\nProductivity (total works)\nNotability (notable works)\nGenre specialization (Oceanus Folk works)\nCareer trajectory (time to first notable work)\nCollaboration patterns\nGenre diversity\n\nHandles edge cases (missing values, infinite values)\nJoins all metrics with artist names\nSaves both intermediate and final datasets"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html#sailor-shift-and-influence-network-processing",
    "href": "Prototype/Data Preprocessing.html#sailor-shift-and-influence-network-processing",
    "title": "Data Preprocessing",
    "section": "",
    "text": "# Identify Sailor Shift node\nsailor_id &lt;- nodes_tbl %&gt;% \n  filter(str_detect(name, fixed(\"Sailor Shift\", ignore_case = TRUE))) %&gt;%\n  pull(id)\nsaveRDS(sailor_id, \"data/processed/sailor_shift_id.rds\")\n\n# Define influence edge types\ninfluence_types &lt;- c(\"LyricalReferenceTo\", \"CoverOf\", \"InterpolatesFrom\", \n                    \"DirectlySamples\", \"InStyleOf\", \"PerformerOf\", \n                    \"ComposerOf\", \"LyricistOf\", \"ProducerOf\", \"RecordedBy\")\nsaveRDS(influence_types, \"data/processed/influence_types.rds\")\n\n# Precompute Oceanus Folk songs and influence edges\nof_songs &lt;- nodes_tbl %&gt;% \n  filter(node_type == \"Song\", genre == \"Oceanus Folk\")\nsaveRDS(of_songs, \"data/processed/oceanus_folk_songs.rds\")\n\ninfluence_edges &lt;- edges_tbl %&gt;% \n  filter(edge_type %in% influence_types)\nsaveRDS(influence_edges, \"data/processed/influence_edges.rds\")\n\n# Extract 1-hop influence edges for Sailor Shift\nsailor_edges &lt;- edges_tbl %&gt;%\n  filter(edge_type %in% influence_types, \n         source == sailor_id | target == sailor_id)\nsaveRDS(sailor_edges, \"data/processed/sailor_influence_edges.rds\")\n\n# Prepare network visualization data\ninfluence_ids &lt;- unique(c(sailor_edges$source, sailor_edges$target))\n\nvis_nodes &lt;- nodes_tbl %&gt;%\n  filter(id %in% influence_ids) %&gt;%\n  mutate(\n    label = name,\n    group = ifelse(id == sailor_id, \"Sailor Shift\", node_type),\n    color = ifelse(id == sailor_id, \"darkblue\", \"skyblue\")\n  ) %&gt;%\n  select(id, label, group, color)\nsaveRDS(vis_nodes, \"data/processed/network_vis_nodes.rds\")\n\nvis_edges &lt;- sailor_edges %&gt;%\n  select(from = source, to = target, label = edge_type)\nsaveRDS(vis_edges, \"data/processed/network_vis_edges.rds\")\n\nExplanation:\n\nIdentifies the key artist node (Sailor Shift)\nDefines relationship types considered as ‚Äúinfluence‚Äù\nExtracts Oceanus Folk songs as a special subset\nPrepares network data specifically for visualization\nSaves all components needed for network analysis"
  },
  {
    "objectID": "Prototype/Data Preprocessing.html#cluster-analysis-preparation",
    "href": "Prototype/Data Preprocessing.html#cluster-analysis-preparation",
    "title": "Data Preprocessing",
    "section": "",
    "text": "# Prepare scaled data for clustering\ncluster_data &lt;- artists_profile %&gt;%\n  select(total_works, notable_works, oceanus_folk_works, \n         collaborations, time_to_notability, genre_diversity) %&gt;%\n  na.omit() %&gt;%\n  scale()  \nsaveRDS(cluster_data, \"data/processed/cluster_analysis_data.rds\")\n\n# Create directory if it doesn't exist\nif(!dir.exists(\"data/processed\")) {\n  dir.create(\"data/processed\", recursive = TRUE)\n}\n\nExplanation:\n\nSelects key numerical features for clustering\nHandles missing values\nStandardizes features to comparable scales\nEnsures output directory exists\nSaves the preprocessed clustering dataset"
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_1.html",
    "href": "Meeting_Minutes/Meeting_Minutes_1.html",
    "title": "Meeting Minute 1",
    "section": "",
    "text": "Project Meeting 1: Project Proposal, Project Methodology, Project Timeline, Project Task Allocation\nDate: 17/06/2025\nTime: 3pm ‚Äì 4:15pm\nIn Attendance: Huang Zihan, Min Htet Aung, Nguyen Thao Nguyen\nNote Taker: Min Htet Aung\n\n\n\n\nProject Topic\nProject Methodology\nProject Timeline\nProject Task Allocation\n\n\n\n\n\nThe team confirmed the decision to proceed with the VAST Challenge 2025 Mini-Challenge 1 as the project topic. This decision was initially explored during the completion of Take-home Exercise 2 and was reaffirmed in this meeting. The rationale for choosing this challenge is based on the clarity and structure of the dataset compared to the other two options. Specifically, Mini-Challenge 1 contains only network data, without the added complexity of timeline or geographical data, making it more suitable for the scope and focus of our planned analysis.\n\n\n\n\nThe team reviewed the initial methodology outlined in our project proposal and compared it with the individual storyboards developed for Take-home Exercise 3. The original methodology focused on using the Mini-Challenge 1 dataset to visualize the influence network centered around Sailor Shift and to analyze collaboration patterns, genre evolution, and artist relationships.\nDuring the meeting, we identified several refinements based on insights gained through the storyboarding process. Notably, Huang Zihan‚Äôs storyboard introduced a genre influence decomposition module using a ternary plot, highlighting demographic influences on genre formation. Min Htet Aung focused on network centrality and clustering to identify key players and genre communities, while Ta Nguyen Thao Nguyen emphasized collaboration timelines and a detailed breakdown of artist roles in shaping Oceanus Folk.\nAs a result, the refined methodology will now integrate:\n\nDynamic network analysis to explore direct and indirect influence paths from Sailor Shift.\nGenre composition breakdowns using demographic aggregations and ternary visualizations.\nCluster and centrality-based profiling to highlight rising stars and influential contributors.\nTemporal and collaborative analysis to trace artist involvement across albums and time.\n\nThese enhancements ensure that the analytical components are both diversified and aligned with the exploratory needs of the dataset, allowing for a more comprehensive and multi-dimensional storytelling approach.\n\n\n\n\nThe team agreed to follow the project timeline shown in our proposal. The timeline includes key steps such as data exploration, building each module, combining everything into the final app, testing, and preparing for the final presentation. Everyone is comfortable with the schedule, and no changes were suggested during the meeting.\n\n\n\n\n\nProject Repository & Website\nMin Htet Aung will be responsible for setting up and maintaining the GitHub repository and project website (Completed)\nPrototype Development\n\nData Preprocessing: Handled by Min Htet Aung.\n\nEDA: Done collaboratively by Min Htet Aung, Huang Zihan, and Ta Nguyen Thao Nguyen.\n\nNetwork Analysis: Shared among all three members.\n\nPrediction Analysis: Led by Min Htet Aung.\n\nDiscovery Phase\n\nData wrangling and identifying key variables will be done by Min Htet Aung.\n\nShiny App Development\n\nSection 1: Ta Nguyen Thao Nguyen\n\nSection 2: Huang Zihan\n\nSection 3: Min Htet Aung\n\nUser Guide:\nTo be written last, by Ta Nguyen Thao Nguyen and Min Htet Aung, after all modules are completed.\n\nProject Poster\n\nDesigned and created by Ta Nguyen Thao Nguyen\n\n\nEach team member is clear on their responsibilities, and the division of work ensures balanced contribution.\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-items",
    "href": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-items",
    "title": "Meeting Minute 1",
    "section": "",
    "text": "Project Topic\nProject Methodology\nProject Timeline\nProject Task Allocation"
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-1-decision-on-project-topic",
    "href": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-1-decision-on-project-topic",
    "title": "Meeting Minute 1",
    "section": "",
    "text": "The team confirmed the decision to proceed with the VAST Challenge 2025 Mini-Challenge 1 as the project topic. This decision was initially explored during the completion of Take-home Exercise 2 and was reaffirmed in this meeting. The rationale for choosing this challenge is based on the clarity and structure of the dataset compared to the other two options. Specifically, Mini-Challenge 1 contains only network data, without the added complexity of timeline or geographical data, making it more suitable for the scope and focus of our planned analysis."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-2-refining-project-methodology",
    "href": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-2-refining-project-methodology",
    "title": "Meeting Minute 1",
    "section": "",
    "text": "The team reviewed the initial methodology outlined in our project proposal and compared it with the individual storyboards developed for Take-home Exercise 3. The original methodology focused on using the Mini-Challenge 1 dataset to visualize the influence network centered around Sailor Shift and to analyze collaboration patterns, genre evolution, and artist relationships.\nDuring the meeting, we identified several refinements based on insights gained through the storyboarding process. Notably, Huang Zihan‚Äôs storyboard introduced a genre influence decomposition module using a ternary plot, highlighting demographic influences on genre formation. Min Htet Aung focused on network centrality and clustering to identify key players and genre communities, while Ta Nguyen Thao Nguyen emphasized collaboration timelines and a detailed breakdown of artist roles in shaping Oceanus Folk.\nAs a result, the refined methodology will now integrate:\n\nDynamic network analysis to explore direct and indirect influence paths from Sailor Shift.\nGenre composition breakdowns using demographic aggregations and ternary visualizations.\nCluster and centrality-based profiling to highlight rising stars and influential contributors.\nTemporal and collaborative analysis to trace artist involvement across albums and time.\n\nThese enhancements ensure that the analytical components are both diversified and aligned with the exploratory needs of the dataset, allowing for a more comprehensive and multi-dimensional storytelling approach."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-3-confirming-project-timeline",
    "href": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-3-confirming-project-timeline",
    "title": "Meeting Minute 1",
    "section": "",
    "text": "The team agreed to follow the project timeline shown in our proposal. The timeline includes key steps such as data exploration, building each module, combining everything into the final app, testing, and preparing for the final presentation. Everyone is comfortable with the schedule, and no changes were suggested during the meeting."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-4-allocating-and-dividing-tasks-for-project",
    "href": "Meeting_Minutes/Meeting_Minutes_1.html#agenda-item-4-allocating-and-dividing-tasks-for-project",
    "title": "Meeting Minute 1",
    "section": "",
    "text": "Project Repository & Website\nMin Htet Aung will be responsible for setting up and maintaining the GitHub repository and project website (Completed)\nPrototype Development\n\nData Preprocessing: Handled by Min Htet Aung.\n\nEDA: Done collaboratively by Min Htet Aung, Huang Zihan, and Ta Nguyen Thao Nguyen.\n\nNetwork Analysis: Shared among all three members.\n\nPrediction Analysis: Led by Min Htet Aung.\n\nDiscovery Phase\n\nData wrangling and identifying key variables will be done by Min Htet Aung.\n\nShiny App Development\n\nSection 1: Ta Nguyen Thao Nguyen\n\nSection 2: Huang Zihan\n\nSection 3: Min Htet Aung\n\nUser Guide:\nTo be written last, by Ta Nguyen Thao Nguyen and Min Htet Aung, after all modules are completed.\n\nProject Poster\n\nDesigned and created by Ta Nguyen Thao Nguyen\n\n\nEach team member is clear on their responsibilities, and the division of work ensures balanced contribution.\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_3.html",
    "href": "Meeting_Minutes/Meeting_Minutes_3.html",
    "title": "Meeting Minutes 3",
    "section": "",
    "text": "Project Meeting 3: Shiny App & Poster Progress Tracking\nDate: 28/06/2025\nTime: 5pm ‚Äì 6pm\nIn Attendance: Huang Zihan, Min Htet Aung, Nguyen Thao Nguyen\nNote Taker: Huang Zihan\n\n\n\nReview of Shiny App Progress\nSuggestions for Shiny App Improvements\nPoster Preparation and Task Division\n\n\n\nThe team has completed approximately 90% of the Oceanus Folk Influence Explorer Shiny app.\nCompleted modules include:\n\nOverview Page: Introduction and summary of the dataset\nExploratory Data Analysis (EDA): Insights on genre distribution, release timelines, and artist demographics\nArtist Profiles: Detailed career timelines, ego networks, and work histories for individual artists\nSailor Shift‚Äôs Influence Analysis: Visualization of how Sailor Shift has influenced other artists and how other artists interact with Sailor Shift.\nCluster Analysis: Identification and visualization of artist clusters with key metrics and interpretation aids\n\nRemaining tasks:\n\nPrediction Analysis Module: Aimed at identifying potential rising stars using rule-based or algorithmic methods\nOceanus Folk Influence Module: Focused on mapping how Oceanus Folk has been influenced by and has influenced other genres and artists over time\n\nThe team will continue working on these final modules to complete the app in preparation for poster presentation and submission.\n\n\n\nThe team identified key areas for enhancement and resolution:\n\nFix the crash in the Cluster Analysis module, which currently causes instability in the app due to rendering or data alignment issues.\nComplete the Oceanus Folk Influence Analysis, focusing on visualizing its genre-level and artist-level interactions over time.\nImplement the Prediction Analysis module, which will identify potential future stars based on artist profiles and relevant metrics.\n\nThese improvements are prioritized for completion before final testing and poster submission to ensure a stable and feature-complete application.\n\n\n\nThe team finalized the structure and key sections of the poster. The poster will include:\n\nIntroduction\nMethodology\nInfluence Analysis\nCluster Analysis\nPrediction Analysis\nConclusion\n\nWork division for content preparation:\n\nTa Nguyen Thao Nguyen: Responsible for the Introduction and Influence Analysis sections\nHuang Zihan: Responsible for Cluster Analysis and Conclusion\nMin Htet Aung: Responsible for Methodology and Prediction Analysis\n\nThe team will collaborate to ensure visual consistency and narrative coherence across sections, with timelines to be set for draft submissions and integration.\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_3.html#agenda-items",
    "href": "Meeting_Minutes/Meeting_Minutes_3.html#agenda-items",
    "title": "Meeting Minutes 3",
    "section": "",
    "text": "Review of Shiny App Progress\nSuggestions for Shiny App Improvements\nPoster Preparation and Task Division\n\n\n\nThe team has completed approximately 90% of the Oceanus Folk Influence Explorer Shiny app.\nCompleted modules include:\n\nOverview Page: Introduction and summary of the dataset\nExploratory Data Analysis (EDA): Insights on genre distribution, release timelines, and artist demographics\nArtist Profiles: Detailed career timelines, ego networks, and work histories for individual artists\nSailor Shift‚Äôs Influence Analysis: Visualization of how Sailor Shift has influenced other artists and how other artists interact with Sailor Shift.\nCluster Analysis: Identification and visualization of artist clusters with key metrics and interpretation aids\n\nRemaining tasks:\n\nPrediction Analysis Module: Aimed at identifying potential rising stars using rule-based or algorithmic methods\nOceanus Folk Influence Module: Focused on mapping how Oceanus Folk has been influenced by and has influenced other genres and artists over time\n\nThe team will continue working on these final modules to complete the app in preparation for poster presentation and submission.\n\n\n\nThe team identified key areas for enhancement and resolution:\n\nFix the crash in the Cluster Analysis module, which currently causes instability in the app due to rendering or data alignment issues.\nComplete the Oceanus Folk Influence Analysis, focusing on visualizing its genre-level and artist-level interactions over time.\nImplement the Prediction Analysis module, which will identify potential future stars based on artist profiles and relevant metrics.\n\nThese improvements are prioritized for completion before final testing and poster submission to ensure a stable and feature-complete application.\n\n\n\nThe team finalized the structure and key sections of the poster. The poster will include:\n\nIntroduction\nMethodology\nInfluence Analysis\nCluster Analysis\nPrediction Analysis\nConclusion\n\nWork division for content preparation:\n\nTa Nguyen Thao Nguyen: Responsible for the Introduction and Influence Analysis sections\nHuang Zihan: Responsible for Cluster Analysis and Conclusion\nMin Htet Aung: Responsible for Methodology and Prediction Analysis\n\nThe team will collaborate to ensure visual consistency and narrative coherence across sections, with timelines to be set for draft submissions and integration.\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_2.html",
    "href": "Meeting_Minutes/Meeting_Minutes_2.html",
    "title": "Meeting Minute 2",
    "section": "",
    "text": "Project Meeting 2: Project Update\nDate: 26/06/2025\nTime: 10pm ‚Äì 10:30pm\nIn Attendance: Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen\nNote Taker: Ta Nguyen Thao Nguyen\n\n\n\n\nProject Progress Update\nProject Timeline Update\n\n\n\n\n\nThe team is currently progressing steadily and in alignment with the original project plan. All key milestones, deliverables, and interim checkpoints remain on track, with no major delays or setbacks reported thus far. Weekly check-ins and collaborative tools (such as GitHub, Trello, and group chat channels) have facilitated clear communication and accountability among all members.\nAt this stage, our primary area of focus is the development and refinement of the ShinyApp, which functions as the central component of our project. The ShinyApp is critical, as it directly supports multiple interconnected elements of the overall deliverable, including data visualization, user interaction, and report generation. Ensuring this application is stable, intuitive, and fully functional is essential for the success of the final presentation and supporting materials.\nThe development process is well underway, with progress being made on both the user interface and server-side logic. The team has been actively collaborating on design choices, UI layout, data preprocessing, and reactive elements to ensure the app meets both user expectations and project requirements. Additional attention is being paid to usability and responsiveness, based on feedback gathered during internal testing.\nEach member is aligned with the shared priorities, and individual responsibilities have been clearly distributed to match both technical strengths and learning goals. For example, one member is focusing on the backend server logic, another on dashboard design, while others are contributing to the data cleaning, documentation, and testing processes. This clear division of labor ensures that contributions are balanced and productive across the team.\nLooking ahead, internal testing and peer feedback will guide improvements to ensure the app is polished before the next milestone.\n\n\n\nFollowing a detailed review of the initial project timeline, the team reached a consensus to revise certain deadlines in order to optimize workflow and reduce last-minute pressure. The most notable change is the advancement of the ShinyApp completion deadline to an earlier date than originally planned.\nThis adjustment was made strategically to allow ample time to focus on the Poster and User Guide, two deliverables that benefit from thoughtful planning, editing, and design. By completing the core application earlier, we create a buffer that enables more deliberate work on documentation and presentation materials, reducing the risk of rushed output near the final deadline.\nIn preparation for the final presentation, a rehearsal session has also been scheduled. This session will allow the team to practice the flow, timing, and delivery of the presentation, ensuring that all team members are confident in their speaking roles and that the content is well-structured and engaging. Any technical hiccups, inconsistencies, or content gaps identified during the rehearsal will be addressed in advance of the actual presentation day.\nFurthermore, the team reaffirmed each member‚Äôs roles and contributions, ensuring clarity on expectations and workloads. This helps prevent overlap, miscommunication, or gaps in task ownership. Progress continues to be monitored weekly, with flexibility built into the timeline to accommodate unexpected challenges or new ideas that may emerge during the development and testing phases.\n\nIn summary, the updated timeline reflects a proactive approach to time management and quality assurance. With a clear roadmap ahead and strong coordination among members, the team is well-positioned to complete all components of the project on time and to a high standard.\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_2.html#agenda-items",
    "href": "Meeting_Minutes/Meeting_Minutes_2.html#agenda-items",
    "title": "Meeting Minute 2",
    "section": "",
    "text": "Project Progress Update\nProject Timeline Update"
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_2.html#agenda-item-1-project-progress-update",
    "href": "Meeting_Minutes/Meeting_Minutes_2.html#agenda-item-1-project-progress-update",
    "title": "Meeting Minute 2",
    "section": "",
    "text": "The team is currently progressing steadily and in alignment with the original project plan. All key milestones, deliverables, and interim checkpoints remain on track, with no major delays or setbacks reported thus far. Weekly check-ins and collaborative tools (such as GitHub, Trello, and group chat channels) have facilitated clear communication and accountability among all members.\nAt this stage, our primary area of focus is the development and refinement of the ShinyApp, which functions as the central component of our project. The ShinyApp is critical, as it directly supports multiple interconnected elements of the overall deliverable, including data visualization, user interaction, and report generation. Ensuring this application is stable, intuitive, and fully functional is essential for the success of the final presentation and supporting materials.\nThe development process is well underway, with progress being made on both the user interface and server-side logic. The team has been actively collaborating on design choices, UI layout, data preprocessing, and reactive elements to ensure the app meets both user expectations and project requirements. Additional attention is being paid to usability and responsiveness, based on feedback gathered during internal testing.\nEach member is aligned with the shared priorities, and individual responsibilities have been clearly distributed to match both technical strengths and learning goals. For example, one member is focusing on the backend server logic, another on dashboard design, while others are contributing to the data cleaning, documentation, and testing processes. This clear division of labor ensures that contributions are balanced and productive across the team.\nLooking ahead, internal testing and peer feedback will guide improvements to ensure the app is polished before the next milestone."
  },
  {
    "objectID": "Meeting_Minutes/Meeting_Minutes_2.html#agenda-item-2-project-timeline-update",
    "href": "Meeting_Minutes/Meeting_Minutes_2.html#agenda-item-2-project-timeline-update",
    "title": "Meeting Minute 2",
    "section": "",
    "text": "Following a detailed review of the initial project timeline, the team reached a consensus to revise certain deadlines in order to optimize workflow and reduce last-minute pressure. The most notable change is the advancement of the ShinyApp completion deadline to an earlier date than originally planned.\nThis adjustment was made strategically to allow ample time to focus on the Poster and User Guide, two deliverables that benefit from thoughtful planning, editing, and design. By completing the core application earlier, we create a buffer that enables more deliberate work on documentation and presentation materials, reducing the risk of rushed output near the final deadline.\nIn preparation for the final presentation, a rehearsal session has also been scheduled. This session will allow the team to practice the flow, timing, and delivery of the presentation, ensuring that all team members are confident in their speaking roles and that the content is well-structured and engaging. Any technical hiccups, inconsistencies, or content gaps identified during the rehearsal will be addressed in advance of the actual presentation day.\nFurthermore, the team reaffirmed each member‚Äôs roles and contributions, ensuring clarity on expectations and workloads. This helps prevent overlap, miscommunication, or gaps in task ownership. Progress continues to be monitored weekly, with flexibility built into the timeline to accommodate unexpected challenges or new ideas that may emerge during the development and testing phases.\n\nIn summary, the updated timeline reflects a proactive approach to time management and quality assurance. With a clear roadmap ahead and strong coordination among members, the team is well-positioned to complete all components of the project on time and to a high standard.\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "team_intro.html",
    "href": "team_intro.html",
    "title": "üéµ Meet the Ensemble: Folk Flow",
    "section": "",
    "text": "Every great performance begins with harmony.\nFrom three distinct notes came a single chord ‚Äî and so began our journey through data, rhythm, and discovery.\n\n\n Huang Zi Han\n\n\n Min Tet Aung\n\n\n Ta Nguyen Thao Nguyen\n\n\nWelcome to Folk Flow ‚Äî where charts hum, graphs groove, and every dataset sings a story.\nWe‚Äôre a trio of aspiring visual storytellers from ISSS608: Visual Analytics and Applications, part of the Master of IT in Business programme at Singapore Management University.\nWith a shared love for clarity, rhythm, and design, we compose data narratives that capture not just patterns ‚Äî but the pulse behind them.\nFrom notes to networks, from melody to meaning ‚Äî we invite you to explore how visual analytics can turn information into inspiration.\n\n\nDeveloped as part of the Visual Analytics Application course, MITB @ SMU, 2025.\nGroup 13 ‚Äî Huang Zihan, Min Htet Aung, Ta Nguyen Thao Nguyen.\nAll rights reserved ¬© 2025."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html",
    "href": "Prototype/Project Proposal_Group 13.html",
    "title": "Project Proposal",
    "section": "",
    "text": "The motivation for this project arises from the remarkable rise of Sailor Shift, a global music phenomenon originating from Oceanus, and the growing cultural influence of the Oceanus Folk genre. As Oceanus transforms from a quiet fishing island into a globally recognized cultural hub, there is an urgent need to trace and understand how Sailor‚Äôs career, collaborations, and artistic evolution have contributed to the global diffusion of Oceanus Folk.\nLocal journalist Silas Reed has compiled an extensive musical knowledge graph to trace these influences. Our project aims to support this effort by building an interactive system that enables deep exploration of Sailor‚Äôs career trajectory and the broader spread of Oceanus Folk through collaborations, stylistic borrowings, and evolving artist networks."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#data-preparation",
    "href": "Prototype/Project Proposal_Group 13.html#data-preparation",
    "title": "Project Proposal",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nExtract and organize data from the provided JSON graph structure, containing nodes (e.g., artists, songs) and edges (e.g., collaborations, influences).\nPerform ID mapping to enrich relationships by joining connection IDs with their corresponding metadata (e.g., names, roles, types).\nThis mapping enables clear interpretation of relationships, transforming raw IDs into meaningful context for analysis and visualization.\nStandardize categorical fields (e.g., genre labels), convert date formats, and handle missing or duplicated entries to ensure data quality."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#exploratory-and-statistical-analysis",
    "href": "Prototype/Project Proposal_Group 13.html#exploratory-and-statistical-analysis",
    "title": "Project Proposal",
    "section": "Exploratory and Statistical Analysis",
    "text": "Exploratory and Statistical Analysis\n\nConduct descriptive analysis to understand the distribution of artist activity, genre presence, and collaboration trends.\nCalculate metrics such as degree, centrality, and influence to identify key figures and genre connectors.\nProfile rising stars based on factors like number of notable works, time to recognition, and involvement in Oceanus Folk."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#network-graph-analysis",
    "href": "Prototype/Project Proposal_Group 13.html#network-graph-analysis",
    "title": "Project Proposal",
    "section": "Network Graph Analysis",
    "text": "Network Graph Analysis\n\nConstruct ego networks to visualize Sailor Shift‚Äôs immediate and extended influence across the music network.\nTrace indirect paths of influence to explore how her style may have shaped other artists or genres over time.\nBuild subgraphs to isolate and compare collaboration patterns during her band years (Ivy Echoes) and solo career."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#data-visualization",
    "href": "Prototype/Project Proposal_Group 13.html#data-visualization",
    "title": "Project Proposal",
    "section": "Data Visualization",
    "text": "Data Visualization\n\nUse visualizations such as timelines, bar charts, radar plots, and network graphs to communicate key insights.\nHighlight genre evolution, collaboration intensity, and Sailor Shift‚Äôs career milestones through visual storytelling.\nInclude interactive elements where possible for deeper exploratory potential."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#interactive-shiny-application",
    "href": "Prototype/Project Proposal_Group 13.html#interactive-shiny-application",
    "title": "Project Proposal",
    "section": "Interactive Shiny Application",
    "text": "Interactive Shiny Application\n\nDevelop a Shiny dashboard that integrates all key visualizations into an accessible, interactive tool.\nAllow users to explore artist influence networks, compare rising stars, filter by genre or time period, and track genre blending.\nEnsure the app supports dynamic, user-driven exploration to uncover patterns and forecast emerging Oceanus Folk artists."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#influence-network-graph",
    "href": "Prototype/Project Proposal_Group 13.html#influence-network-graph",
    "title": "Project Proposal",
    "section": "1. Influence Network Graph",
    "text": "1. Influence Network Graph\nThis visualization displays Sailor Shift at the center of a web of artistic influence, showing both who inspired her and whom she influenced. Users can filter by time or genre to trace direct and indirect musical connections. The graph helps highlight her centrality and stylistic reach within the broader music scene."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#collaboration-heatmap",
    "href": "Prototype/Project Proposal_Group 13.html#collaboration-heatmap",
    "title": "Project Proposal",
    "section": "2. Collaboration Heatmap",
    "text": "2. Collaboration Heatmap\nThis heatmap reveals Sailor Shift‚Äôs collaboration intensity with various artists over time. Darker cells represent more frequent collaborations, helping users identify her core creative partners and peak collaborative periods. A dropdown menu allows sorting by frequency or collaborator role."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#genre-evolution-timeline",
    "href": "Prototype/Project Proposal_Group 13.html#genre-evolution-timeline",
    "title": "Project Proposal",
    "section": "3. Genre Evolution Timeline",
    "text": "3. Genre Evolution Timeline\nThis chart tracks how Sailor Shift‚Äôs musical style evolved by visualizing the distribution of genres in her work over time. Stacked areas represent genres like Oceanus Folk or Indie Pop, giving a clear view of stylistic shifts, experimentation, and long-term trends in her artistic identity."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#career-milestone-timeline",
    "href": "Prototype/Project Proposal_Group 13.html#career-milestone-timeline",
    "title": "Project Proposal",
    "section": "4. Career Milestone Timeline",
    "text": "4. Career Milestone Timeline\nA linear timeline maps out key events in Sailor Shift‚Äôs career, such as viral hits, album launches, and notable collaborations. Each point on the timeline is interactive, offering additional context and making it easy to connect events with artistic or genre changes observed in other charts."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#artist-comparison-dashboard",
    "href": "Prototype/Project Proposal_Group 13.html#artist-comparison-dashboard",
    "title": "Project Proposal",
    "section": "5. Artist Comparison Dashboard",
    "text": "5. Artist Comparison Dashboard\nThis dashboard allows users to compare Sailor Shift with other artists using bar and radar charts. Metrics include collaboration count, notable works, and genre diversity. It offers a clear visual summary of how different artists‚Äô careers align or diverge from Sailor‚Äôs trajectory."
  },
  {
    "objectID": "Prototype/Project Proposal_Group 13.html#emerging-artist-predictor",
    "href": "Prototype/Project Proposal_Group 13.html#emerging-artist-predictor",
    "title": "Project Proposal",
    "section": "6. Emerging Artist Predictor",
    "text": "6. Emerging Artist Predictor\nThis interactive scatter plot highlights artists with the potential to become the next Oceanus Folk stars. Based on influence and collaboration metrics, users can filter by genre or time range to discover rising talent who resemble Sailor Shift‚Äôs early career profile."
  },
  {
    "objectID": "Prototype/Artists-Future.html",
    "href": "Prototype/Artists-Future.html",
    "title": "Artists Profiles and Future Predictions",
    "section": "",
    "text": "Show the code\npacman::p_load(tidyverse, jsonlite, SmartEDA, tidygraph, ggraph, igraph, lubridate, janitor, ggthemes, plotly, DT, ggfortify, visNetwork, factoextra, FactoMineR, fmsb, forcats)"
  },
  {
    "objectID": "Prototype/Artists-Future.html#rising-star-profile",
    "href": "Prototype/Artists-Future.html#rising-star-profile",
    "title": "Artists Profiles and Future Predictions",
    "section": "6.1. Rising Star Profile",
    "text": "6.1. Rising Star Profile\n\n\nShow the code\n# Load pre-processed artist profiles\nrising_star_profile &lt;- readRDS(\"data/processed/artists_profile_complete.rds\")\n\n# Render interactive data table\ndatatable(\n  rising_star_profile,\n  rownames = FALSE,\n  options = list(\n    pageLength = 10,\n    autoWidth = TRUE,\n    scrollX = TRUE,\n    order = list(list(3, 'desc'))  # Sort by total_works by default\n  ),\n  caption = htmltools::tags$caption(\n    style = 'caption-side: top; text-align: left; font-size: 16px; font-weight: bold;',\n    'Table: ', 'Rising Star Profile of Artists'\n  )\n)"
  },
  {
    "objectID": "Prototype/Artists-Future.html#influence-network-for-oceanus-folk-genre",
    "href": "Prototype/Artists-Future.html#influence-network-for-oceanus-folk-genre",
    "title": "Artists Profiles and Future Predictions",
    "section": "7.1. Influence Network for Oceanus Folk Genre",
    "text": "7.1. Influence Network for Oceanus Folk Genre\n\n\nShow the code\n# Load pre-processed network visualization data\nvis_nodes &lt;- readRDS(\"data/processed/network_vis_nodes.rds\")\nvis_edges &lt;- readRDS(\"data/processed/network_vis_edges.rds\")\n\n# Render the interactive network\nvisNetwork(vis_nodes, vis_edges, height = \"700px\", width = \"100%\") %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visInteraction(navigationButtons = TRUE) %&gt;%\n  visLayout(randomSeed = 42) %&gt;%\n  visLegend(useGroups = TRUE, position = \"right\", main = \"Node Types\")"
  },
  {
    "objectID": "Prototype/Artists-Future.html#data-preparation",
    "href": "Prototype/Artists-Future.html#data-preparation",
    "title": "Artists Profiles and Future Predictions",
    "section": "8.1. Data Preparation",
    "text": "8.1. Data Preparation\n\n\nShow the code\n# Load artist profiles and filter for clustering\nrising_star_profile &lt;- readRDS(\"data/processed/artists_profile_complete.rds\")\n\ncluster_data &lt;- rising_star_profile %&gt;%\n  filter(!is.na(first_release)) %&gt;%\n  select(name, total_works, notable_works, oceanus_folk_works, \n         first_release, time_to_notability, collaborations) %&gt;%\n  drop_na()\n\ncluster_scaled &lt;- cluster_data %&gt;%\n  select(-name) %&gt;%\n  scale()"
  },
  {
    "objectID": "Prototype/Artists-Future.html#determine-optimal-number-of-clusters-elbow-method",
    "href": "Prototype/Artists-Future.html#determine-optimal-number-of-clusters-elbow-method",
    "title": "Artists Profiles and Future Predictions",
    "section": "8.2. Determine Optimal Number of Clusters (Elbow Method)",
    "text": "8.2. Determine Optimal Number of Clusters (Elbow Method)\n\n\nShow the code\nset.seed(123)\nfviz_nbclust(cluster_scaled, kmeans, method = \"wss\") +\n  labs(title = \"Elbow Method for Optimal K\")"
  },
  {
    "objectID": "Prototype/Artists-Future.html#apply-k-means-clustering",
    "href": "Prototype/Artists-Future.html#apply-k-means-clustering",
    "title": "Artists Profiles and Future Predictions",
    "section": "8.3. Apply K-Means Clustering",
    "text": "8.3. Apply K-Means Clustering\n\n\nShow the code\nset.seed(123)\nk_result &lt;- kmeans(cluster_scaled, centers = 4, nstart = 25)\n\ncluster_data &lt;- cluster_data %&gt;%\n  mutate(cluster = factor(k_result$cluster))\n\ndatatable(cluster_data, options = list(pageLength = 10))"
  },
  {
    "objectID": "Prototype/Artists-Future.html#interactive-pca-plot",
    "href": "Prototype/Artists-Future.html#interactive-pca-plot",
    "title": "Artists Profiles and Future Predictions",
    "section": "8.4. Interactive PCA Plot",
    "text": "8.4. Interactive PCA Plot\n\n\nShow the code\npca_result &lt;- prcomp(cluster_scaled, scale. = TRUE)\npca_data &lt;- as.data.frame(pca_result$x[, 1:2])\n\npca_data &lt;- pca_data %&gt;%\n  mutate(\n    cluster = factor(k_result$cluster),\n    name = cluster_data$name\n  )\n\npca &lt;- ggplot(pca_data, aes(x = PC1, y = PC2, color = cluster)) +\n  geom_point(aes(text = paste0(\n    \"&lt;b&gt;Name:&lt;/b&gt; \", name, \n    \"&lt;br&gt;&lt;b&gt;Cluster:&lt;/b&gt; \", cluster\n  )), alpha = 0.8, size = 2) +\n  stat_ellipse(type = \"norm\", linetype = 2, aes(group = cluster), show.legend = FALSE) +\n  labs(\n    title = \"Interactive PCA Cluster Plot\",\n    x = \"Principal Component 1\",\n    y = \"Principal Component 2\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    legend.position = \"right\"\n  )\n\nggplotly(pca, tooltip = \"text\")"
  },
  {
    "objectID": "Prototype/Artists-Future.html#cluster-summary-table",
    "href": "Prototype/Artists-Future.html#cluster-summary-table",
    "title": "Artists Profiles and Future Predictions",
    "section": "8.5. Cluster Summary Table",
    "text": "8.5. Cluster Summary Table\n\n\nShow the code\ncluster_summary &lt;- cluster_data %&gt;%\n  group_by(cluster) %&gt;%\n  summarise(\n    total_works = mean(total_works, na.rm = TRUE),\n    notable_works = mean(notable_works, na.rm = TRUE),\n    oceanus_folk_works = mean(oceanus_folk_works, na.rm = TRUE),\n    first_release = mean(first_release, na.rm = TRUE),\n    time_to_notability = mean(time_to_notability, na.rm = TRUE),\n    collaborations = mean(collaborations, na.rm = TRUE),\n    count = n(),\n    .groups = \"drop\"\n  )\n\ndatatable(cluster_summary, options = list(pageLength = 5))"
  },
  {
    "objectID": "Prototype/Artists-Future.html#identify-the-three-artists",
    "href": "Prototype/Artists-Future.html#identify-the-three-artists",
    "title": "Artists Profiles and Future Predictions",
    "section": "9.1. Identify the three Artists",
    "text": "9.1. Identify the three Artists\n\n\nShow the code\n# Load pre-processed data\nrising_star_profile &lt;- readRDS(\"data/processed/artists_profile_complete.rds\")\nnodes_tbl &lt;- readRDS(\"data/processed/nodes_categorized.rds\")\n\n# Select artists\nartist_sailor &lt;- rising_star_profile %&gt;%\n  filter(str_detect(name, regex(\"Sailor Shift\", ignore_case = TRUE)))\n\nivy_members &lt;- c(\"Maya Jensen\", \"Lila Hartman\", \"Jade Thompson\", \"Sophie Ramirez\")\nartist_peer &lt;- rising_star_profile %&gt;%\n  filter(name %in% ivy_members) %&gt;%\n  arrange(desc(notable_works)) %&gt;%\n  slice(1)\n\nartist_emerging &lt;- rising_star_profile %&gt;%\n  filter(!name %in% c(ivy_members, \"Sailor Shift\")) %&gt;%\n  filter(oceanus_folk_works &gt; 0, time_to_notability &gt;= 0) %&gt;%\n  arrange(time_to_notability, desc(notable_works)) %&gt;%\n  slice(1)\n\nselected_artists &lt;- bind_rows(artist_sailor, artist_peer, artist_emerging)\n\ndatatable(selected_artists, options = list(pageLength = 5), \n          caption = \"Selected Artists for Career Comparison\")"
  },
  {
    "objectID": "Prototype/Artists-Future.html#getting-their-contributions-songsalbums",
    "href": "Prototype/Artists-Future.html#getting-their-contributions-songsalbums",
    "title": "Artists Profiles and Future Predictions",
    "section": "9.2. Getting their Contributions (Songs/Albums)",
    "text": "9.2. Getting their Contributions (Songs/Albums)\n\n\nShow the code\n# Load pre-processed data\nedges_tbl_mapped &lt;- readRDS(\"data/processed/edges_mapped.rds\")\nid_map &lt;- readRDS(\"data/processed/id_mapping.rds\")\n\n# Prepare artist data\nartist_nodes &lt;- selected_artists %&gt;%\n  select(artist_id = person_id, artist_name = name)\n\nartist_nodes_indexed &lt;- artist_nodes %&gt;%\n  left_join(id_map, by = c(\"artist_id\" = \"id\")) %&gt;%\n  rename(index = index)\n\nrelevant_types &lt;- readRDS(\"data/processed/influence_types.rds\")\n\n# Get artist works\nartist_edges &lt;- edges_tbl_mapped %&gt;%\n  filter(edge_type %in% relevant_types) %&gt;%\n  left_join(artist_nodes_indexed, by = c(\"from\" = \"index\")) %&gt;%\n  filter(!is.na(artist_name))\n\nartist_works &lt;- artist_edges %&gt;%\n  left_join(\n    nodes_tbl %&gt;%\n      select(work_id = id, work_name = name, work_type = node_type,\n             release_date, genre, notable),\n    by = c(\"to\" = \"work_id\")\n  ) %&gt;%\n  filter(work_type %in% c(\"Song\", \"Album\")) %&gt;%\n  select(artist_name, work_name, release_date, genre, notable, work_type, edge_type) %&gt;%\n  mutate(release_date = as.integer(release_date)) %&gt;%\n  arrange(artist_name, release_date)\n\ndatatable(\n  artist_works,\n  rownames = FALSE,\n  options = list(\n    pageLength = 10,\n    autoWidth = TRUE,\n    scrollX = TRUE\n  ),\n  caption = htmltools::tags$caption(\n    style = 'caption-side: top; text-align: left; font-size: 16px; font-weight: bold;',\n    'Table: ', 'Works Contributed to or Influenced by Selected Artists'\n  )\n)"
  },
  {
    "objectID": "Prototype/Artists-Future.html#plotting-career-timeline",
    "href": "Prototype/Artists-Future.html#plotting-career-timeline",
    "title": "Artists Profiles and Future Predictions",
    "section": "9.3. Plotting Career Timeline",
    "text": "9.3. Plotting Career Timeline\n\n\nShow the code\ntop_genres &lt;- artist_works %&gt;%\n  count(genre, sort = TRUE) %&gt;%\n  slice_head(n = 6) %&gt;%\n  pull(genre)\n\nlevels_genre_rev &lt;- sort(top_genres, decreasing = TRUE)\n\nartist_subset &lt;- artist_works %&gt;%\n  filter(genre %in% top_genres) %&gt;%\n  mutate(genre = factor(genre, levels = levels_genre_rev))\n\nggplot(\n  artist_subset,\n  aes(x = release_date, y = artist_name, shape = genre, color = notable)\n) +\n  geom_jitter(width = 0.3, height = 0.3, size = 3, alpha = 0.7) +\n  scale_color_manual(values = c(`TRUE` = \"#a1d99b\", `FALSE` = \"#fcbba1\")) +\n  labs(\n    title  = \"Timelines (Top Genres Sorted Z‚ÄìA)\",\n    shape  = \"Genre\",\n    color  = \"Notable\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "Prototype/Artists-Future.html#plotting-ego-network-diagram-for-top-3-artists",
    "href": "Prototype/Artists-Future.html#plotting-ego-network-diagram-for-top-3-artists",
    "title": "Artists Profiles and Future Predictions",
    "section": "9.4. Plotting EGO Network Diagram for Top 3 Artists",
    "text": "9.4. Plotting EGO Network Diagram for Top 3 Artists\n\n\nShow the code\n# Load pre-processed graph\ngraph &lt;- readRDS(\"data/processed/full_graph.rds\")\n\n# Get artist indices\nego_artist_nodes &lt;- nodes_tbl %&gt;%\n  filter(node_type == \"Person\", name %in% selected_artists$name) %&gt;%  \n  left_join(id_map, by = c(\"id\" = \"id\")) %&gt;%\n  select(artist_name = name, artist_id = id, index)\n\nego_indices &lt;- ego_artist_nodes$index\n\n# Extract ego network\nego_subgraph &lt;- graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(node_is_adjacent(ego_indices) | row_number() %in% ego_indices)\n\n# Prepare visualization data\nnodes_data &lt;- ego_subgraph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  mutate(\n    id = row_number(),\n    label = ifelse(!is.na(name), name, node_type),\n    group = node_type,\n    title = paste0(\"&lt;b&gt;\", label, \"&lt;/b&gt;&lt;br&gt;Type: \", node_type)\n  ) %&gt;%\n  select(id, label, group, title)\n\nedges_data &lt;- ego_subgraph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  mutate(\n    from = as.integer(from),\n    to = as.integer(to),\n    label = edge_type,\n    title = paste(\"Edge Type:\", edge_type)\n  ) %&gt;%\n  select(from, to, label, title)\n\n# Plot network\nvisNetwork(nodes_data, edges_data, height = \"600px\", width = \"100%\") %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),\n    nodesIdSelection = TRUE\n  ) %&gt;%\n  visInteraction(navigationButtons = TRUE) %&gt;%\n  visLayout(randomSeed = 42) %&gt;%\n  visLegend(\n    useGroups = TRUE,\n    position = \"right\",\n    main = \"Node Type\"\n  )"
  },
  {
    "objectID": "Prototype/Artists-Future.html#defining-thresholds-to-filter-candidates",
    "href": "Prototype/Artists-Future.html#defining-thresholds-to-filter-candidates",
    "title": "Artists Profiles and Future Predictions",
    "section": "10.1. Defining Thresholds to Filter Candidates",
    "text": "10.1. Defining Thresholds to Filter Candidates\n\n\nShow the code\ncurrent_year &lt;- 2025\n\nfuture_stars &lt;- rising_star_profile %&gt;%\n  filter(\n    oceanus_folk_works &gt;= 5,\n    notable_works &gt;= 6,\n    !name %in% selected_artists$name,\n    first_release &gt;= (current_year - 10),\n    time_to_notability &lt;= 3 | is.na(time_to_notability)\n  ) %&gt;%\n  arrange(desc(notable_works), desc(collaborations)) \n\nfuture_stars %&gt;% select(name, total_works, notable_works, oceanus_folk_works, collaborations, time_to_notability)\n\n\n# A tibble: 4 √ó 6\n  name              total_works notable_works oceanus_folk_works collaborations\n  &lt;chr&gt;                   &lt;int&gt;         &lt;int&gt;              &lt;int&gt;          &lt;int&gt;\n1 Beatrice Albright          11            11                 11              1\n2 Daniel O'Connell           11            11                 11              1\n3 Orla Seabloom               9             9                  9              2\n4 Lei Jin                     7             6                  5              0\n# ‚Ñπ 1 more variable: time_to_notability &lt;dbl&gt;"
  },
  {
    "objectID": "Prototype/Artists-Future.html#pick-top-3-candidates-and-justify",
    "href": "Prototype/Artists-Future.html#pick-top-3-candidates-and-justify",
    "title": "Artists Profiles and Future Predictions",
    "section": "10.2. Pick Top 3 Candidates and Justify",
    "text": "10.2. Pick Top 3 Candidates and Justify\n\n\nShow the code\ntop_3_future_stars &lt;- future_stars %&gt;% \n  slice_max(order_by = notable_works + collaborations + oceanus_folk_works, n = 3)\n\ntop_3_future_stars\n\n\n# A tibble: 3 √ó 10\n  person_id name      total_works notable_works oceanus_folk_works first_release\n      &lt;int&gt; &lt;chr&gt;           &lt;int&gt;         &lt;int&gt;              &lt;int&gt;         &lt;int&gt;\n1     17349 Beatrice‚Ä¶          11            11                 11          2031\n2     17355 Daniel O‚Ä¶          11            11                 11          2031\n3     17340 Orla Sea‚Ä¶           9             9                  9          2029\n# ‚Ñπ 4 more variables: first_notable &lt;dbl&gt;, time_to_notability &lt;dbl&gt;,\n#   collaborations &lt;int&gt;, genre_diversity &lt;int&gt;"
  },
  {
    "objectID": "Prototype/Artists-Future.html#radar-chart-for-each-candidates",
    "href": "Prototype/Artists-Future.html#radar-chart-for-each-candidates",
    "title": "Artists Profiles and Future Predictions",
    "section": "10.3. Radar Chart for Each Candidates",
    "text": "10.3. Radar Chart for Each Candidates\n\n\nShow the code\nradar_data &lt;- top_3_future_stars %&gt;%\n  select(total_works, notable_works, oceanus_folk_works, collaborations, time_to_notability) %&gt;%\n  as.data.frame()\n\nrownames(radar_data) &lt;- top_3_future_stars$name\ncolnames(radar_data) &lt;- c(\"Total\", \"Notable\", \"Oceanus\\nFolk\", \"Collabs\", \"Rapid\\nRise\")\n\nradar_data[, \"Rapid\\nRise\"] &lt;- max(radar_data[, \"Rapid\\nRise\"], na.rm = TRUE) - \n                               radar_data[, \"Rapid\\nRise\"]\n\nradar_data_scaled &lt;- as.data.frame(lapply(radar_data, function(x) {\n  scales::rescale(x, to = c(0, 100))\n}))\nrownames(radar_data_scaled) &lt;- rownames(radar_data)\n\npar(mfrow = c(1, 3), \n    mar = c(2, 2, 4, 2),\n    oma = c(1, 1, 3, 1),\n    family = \"sans\")\n\nfor (i in 1:nrow(radar_data_scaled)) {\n  artist_name &lt;- rownames(radar_data_scaled)[i]\n  artist_values &lt;- radar_data_scaled[i, , drop = FALSE]\n  \n  radar_individual &lt;- rbind(\n    rep(100, ncol(radar_data_scaled)),\n    rep(0, ncol(radar_data_scaled)),\n    artist_values\n  )\n  \n  radarchart(radar_individual,\n             axistype = 1,\n             pcol = \"darkorange\",\n             pfcol = rgb(1, 0.5, 0, 0.3),\n             plwd = 2,\n             cglcol = \"gray\",\n             cglty = 1,\n             cglwd = 0.8,\n             axislabcol = \"darkblue\",\n             caxislabels = paste0(seq(0, 100, 25), \"%\"),\n             vlcex = 0.85,\n             title = artist_name,\n             calcex = 0.8,\n             cex.main = 1.2)\n}"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]